---
title: Introduction 
format: 
  html:
    toc: false
date-modified: last-modified
date-format: long
summary: This is a summary 
---


:::{.callout-note title="Course Overview"}
- üë®‚Äçüíª **Target Audience:** Anyone interested in workflow management systems and software environments. 
- üë©‚Äçüéì **Level:** Advanced.
- üîí **License:** [Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license.](https://creativecommons.org/licenses/by-sa/4.0/legalcode)  
- üí∞ **Funding:** This project was funded by the Novo Nordisk Fonden (NNF20OC0063268).
:::

The course "HPC pipes" is designed to provide participants with foundational knowledge and practical skills in writing reproducible pipelines. As part of effective data management, it is crucial that researchers create reproducible analyses that enable others to validate and build upon their work. We will explore essential elements of reproducibility and efficiency in computational research, highlighting techniques and tools for creating robust and transparent coding and workflows. By prioritizing reproducibility and replicability, researchers can enhance the credibility and impact of their findings while fostering collaboration and knowledge dissemination within the scientific community. T, ensuring that you can handle your projects with ease. For more details on practical RDM strategies, explore our on [practical RDM for biodata](https://hds-sandbox.github.io/RDM_NGS_course/) for more details.

**HPC-pipes** is divided into two main sections: 

- **Computational environments**
- **Pipeline languages**

:::{.callout-warning title="Course Requirements"}
It is important to be familiar with unix and python. Follow the tutorials in the links below if you need a refresher.

- Command Line experience ([Software Carprentry Shell](https://swcarpentry.github.io/shell-novice/01-intro.html))
- Programming experience ([Python](https://swcarpentry.github.io/python-novice-inflammation/))
:::

::: {.callout-tip title="Module Goals"}
- Understand the rol of scientific pipelines
- Run existing pipelines
- Implement and modify pipelines
- Specify software and computational resource needs 
- Customise your pipeline to accept user-defined configurations (params)
- Create reproducible analyses that can be adapted to new data with little effort
- Integrate workflows with software environments
:::


#### Acknowledgements
